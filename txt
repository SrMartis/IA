using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

namespace Rextester
{

    public class Program {
    
        static List<Node> Lista;
        
        public static void Main(string[] args) {        
                     
			#region Cria primeiro no
			Node primeiro = new Node();
			primeiro.primeiro = true;
			primeiro.visitado = false;
			primeiro.vizinhos = new List<Node>();									
            ConfiguraNo(primeiro, new int[]{2,8,12,13}, new int[]{20,29,29,37});
			#endregion
				
			Node segundo = primeiro.vizinhos.Where(x=> x.numero == 2).FirstOrDefault();
            ConfiguraNo(segundo,  new int[]{1,3,12,13}, new int[]{20,25,28,39});
                                                
            Console.WriteLine(Lista[0].vizinhos.Count());
            
        }
        
        public static void Navegar(Node n) {
         // Configurar metodos de navegação   
        }
                              
        public static Node SelecionaNo(int index) {
            return Lista.ElementAt(index-1);
        }
                                  
        
        public static void ConfiguraNo(Node no, int[] vizinhos, int[] custos) {			
			if (no.vizinhos.Count() == 0) {
				//Cria os vizinhos;
            	for(int i = 1; i < vizinhos.Length; i++) {	
					Node noexiste = Lista.Where(x=> x.numero == i).Select(x => x).FirstOrDefault();
					
					Node vizinho = new Node();
					vizinho.visitado = false;
					vizinho.numero = vizinhos[i-1];				
                	vizinho.peso = custos[i-1];
					
					no.vizinhos.Add(vizinho);
            	}
				Lista.Add(no);
			}
        }
		
    public class Node {
        public bool primeiro;
		public int numero;
        public bool visitado;
        public List<Node> vizinhos;
        public int? peso;    
    }
}
}
